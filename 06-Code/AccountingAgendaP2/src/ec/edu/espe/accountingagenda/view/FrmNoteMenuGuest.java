package ec.edu.espe.accountingagenda.view;

import ec.edu.espe.accountingagenda.controller.Print;
import ec.edu.espe.accountingagenda.model.Note;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;

/**
 *
 * @author Edison Ludeña, Bug Busters, DCCO-ESPE
 */
public class FrmNoteMenuGuest extends javax.swing.JFrame {

    private ArrayList<Note> savedNotes;

    public FrmNoteMenuGuest(ArrayList<Note> savedNotes) {
        initComponents();
        this.savedNotes = savedNotes;
    }

    public ArrayList<Note> getSavedNotes() {
        return savedNotes;
    }

    public FrmNoteMenuGuest() {
        initComponents();
        savedNotes = new ArrayList<>();
        JButton btnPrint = new javax.swing.JButton();
        btnPrint.setText("Imprimir");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }

        });
    }

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {
        Print print = new Print();
        ArrayList<Note> savedNotes = getSavedNotes();

        for (Note note : savedNotes) {
            print.printNote(note.getTitle(), note.getContent(), FrmNoteMenuGuest.this);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnCreateNote = new javax.swing.JButton();
        btnShowNote = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("== MENÚ DE NOTAS ==");

        jLabel2.setText("SELECCIONE LA ACCIÓN QUE DESEA REALIZAR");

        btnCreateNote.setText("Crear Nota");
        btnCreateNote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateNoteActionPerformed(evt);
            }
        });

        btnShowNote.setText("Ver Nota");
        btnShowNote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowNoteActionPerformed(evt);
            }
        });

        btnBack.setText("Cerrar Sesión");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnCreateNote, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnShowNote, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(btnCreateNote, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnShowNote, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateNoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateNoteActionPerformed
        FrmNote frmNote = new FrmNote();
        frmNote.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnCreateNoteActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        FrmEntryMenu frmEntryIn = new FrmEntryMenu();
        frmEntryIn.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnShowNoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowNoteActionPerformed
        FrmTblNote frmTblNote = new FrmTblNote();
        frmTblNote.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnShowNoteActionPerformed

    private void editNote() {
        if (savedNotes == null || savedNotes.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay notas guardadas", "Editar Nota",
                    JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        String[] noteTitles = new String[savedNotes.size()];
        for (int i = 0; i < savedNotes.size(); i++) {
            noteTitles[i] = savedNotes.get(i).getTitle();
        }

        String selectedNoteTitle = (String) JOptionPane.showInputDialog(this, "Selecciona la nota a editar:",
                "Editar Nota", JOptionPane.QUESTION_MESSAGE, null, noteTitles, noteTitles[0]);

        if (selectedNoteTitle != null) {
            Note selectedNote = null;
            for (Note note : savedNotes) {
                if (note.getTitle().equals(selectedNoteTitle)) {
                    selectedNote = note;
                    break;
                }
            }

            FrmNote frmNote = new FrmNote(savedNotes);
            frmNote.setNoteForEditing(selectedNote);
            frmNote.setVisible(true);
            dispose();
        }
    }

    private void deleteNote() {
        if (savedNotes == null || savedNotes.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay notas guardadas", "Borrar Nota",
                    JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        String[] noteTitles = new String[savedNotes.size()];
        for (int i = 0; i < savedNotes.size(); i++) {
            noteTitles[i] = savedNotes.get(i).getTitle();
        }

        String selectedNoteTitle = (String) JOptionPane.showInputDialog(this, "Selecciona la nota a borrar:",
                "Borrar Nota", JOptionPane.QUESTION_MESSAGE, null, noteTitles, noteTitles[0]);

        if (selectedNoteTitle != null) {
            int option = JOptionPane.showConfirmDialog(this, "¿Estás seguro de que quieres borrar la nota seleccionada?",
                    "Confirmar Borrado", JOptionPane.YES_NO_OPTION);

            if (option == JOptionPane.YES_OPTION) {
                Note selectedNote = null;
                for (Note note : savedNotes) {
                    if (note.getTitle().equals(selectedNoteTitle)) {
                        selectedNote = note;
                        break;
                    }
                }

                savedNotes.remove(selectedNote);
                JOptionPane.showMessageDialog(this, "Nota borrada exitosamente", "Borrar Nota",
                        JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmNoteMenuGuest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmNoteMenuGuest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmNoteMenuGuest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmNoteMenuGuest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmNoteMenuGuest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateNote;
    private javax.swing.JButton btnShowNote;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
